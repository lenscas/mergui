name: Build and Deploy
on:
  push:
    # Sequence of patterns matched against refs/heads
    branches:
      - master
    paths:
      - "src/**.rs"
      - ".github/workflows/auto_deploy.yml"
      - "static/*"
      - "examples/all.rs"
jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: "hecrj/setup-rust-action@v1"
        with:
          rust-version: stable
      - name: Install the web target
        run: "rustup target add wasm32-unknown-unknown"
      - name: Install Linux dependencies
        run: |
          sudo apt-get -qq update
          sudo apt-get install -y libudev-dev zlib1g-dev alsa libasound2-dev
      - name: Add cargo web
        run: cargo install cargo-web
      - name: Checkout
        uses: actions/checkout@master
      - name: Build library
        # Build the library as a whole. Just so we can still see how long that took.
        run: cargo web build --release --features stdweb
      - name: Build every example
        #first, make the folder that will be published.
        #This needs to happen now, as the build script stores the generated html files there
        run: |
          mkdir ./preps
          sh ./online_examples/build.sh
      - name: Make ready for deploy
        #Order is important here, as both folders contain a index.html file, but we only care about the one in `online_examples`
        run: |
          cp -a ./static/. ./preps/
          cp -a ./target/wasm32-unknown-unknown/release/examples/. ./preps/
          cp ./online_examples/index.html ./preps/index.html
      - name: deploy
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./preps
